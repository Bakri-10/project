---
# Tower-compatible playbook for ATU0 Server Compliance Email Notification
# This playbook can be run directly from Ansible Tower/AWX

- name: IT Risk Metrics Email Notification
  hosts: localhost
  connection: local
  gather_facts: yes

  vars:
    survey_appcode: "{{ survey_appcode | default('ATU0') }}"
    es_service_id: "{{ es_service_id | default('SATU0SRVECWRITE') }}"
    es_service_id_password: "{{ es_service_id_password | default('R4@.iE@GmdVMp3') }}"
    es_url: "{{ es_url | default('https://e87a6cd02ed34b0b844d64cc7d8c41a9.ece.saifg.rbc.com:9243') }}"
    server_compliance_metrics_index: "{{ server_compliance_metrics_index | default('atu0-server-compliance-metrics') }}"
    to: "{{ email_to | default('feyi.sodipo@rbc.com') }}"
    app_codes: "{{ app_codes | default('ATU0') }}"
    playbook_dir: "{{ playbook_dir }}"
    # Define output and tempdir for file operations
    output_dir: "{{ playbook_dir }}/roles/files/output"
    temp_dir: "{{ playbook_dir }}/roles/files/temp"
    # SMTP settings
    smtp_host: "{{ smtp_host | default('smtp.rbc.com') }}"
    smtp_port: "{{ smtp_port | default(25) }}"

  pre_tasks:
  # Create necessary directories
  - name: Ensure output and temp directories exist
    file:
      path: "{{ item }}"
      state: directory
      mode: '0755'
    with_items:
    - "{{ output_dir }}"
    - "{{ temp_dir }}"

  # Ensure required Python dependencies are installed
  - name: Ensure Python dependencies are installed
    ansible.builtin.pip:
      name:
      - elasticsearch
      - requests
      state: present
    become: "{{ 'yes' if ansible_system == 'Linux' else 'no' }}"

  tasks:
  - name: Assign secrets to dedicated variables
    ansible.builtin.set_fact:
      es_service_id: "{{ es_service_id }}"
      es_service_id_password: "{{ es_service_id_password }}"
    no_log: true

  - name: Fetch data from Elasticsearch
    ansible.builtin.include_tasks: "{{ playbook_dir }}/roles/tasks/fetch_data.yml"

  - name: Process data and generate reports
    ansible.builtin.include_tasks: "{{ playbook_dir }}/roles/tasks/process_data.yml"

  - name: Loop through app codes and notify app custodian
    vars:
      vault_path: "AAP/server_compliance_reporting/extra_vars"
    block:
    - name: Get custodian email for appcode
      ansible.builtin.set_fact:
        custodian_email: "{{ to }}"

    - name: Copy email template to output directory
      ansible.builtin.copy:
        src: "{{ playbook_dir }}/roles/files/email_template.txt"
        dest: "{{ output_dir }}/email_template.txt"
        force: no
        mode: '0644'
      register: template_copy
      ignore_errors: yes

    - name: Create temporary email content file
      ansible.builtin.copy:
        content: |
          Dear Team,

          Please find below the latest IT risk metrics Overview for app code: {{ app_codes }}.

          ==========================
          Windows Server Vulnerabilities - [5]
          ==========================
          Priority | Issue Name
          -----------------------------
          P2      | CVE-2023-12345
          P2      | CVE-2023-23456
          P2      | CVE-2023-34567
          P2      | CVE-2023-45678
          P2      | CVE-2023-56789

          ==========================
          Cryptography - [3]
          ==========================
          Cryptography Issues - [Count]: 3

          Best regards,
          ATU0 Compliance Team
          Security Engineering
          {{ to }}
        dest: "{{ output_dir }}/{{ app_codes }}_email.txt"
        mode: '0644'
      register: email_file
      when: not lookup('file', output_dir + '/' + app_codes + '_email.txt', errors='ignore')

    - name: Load generated email content
      ansible.builtin.slurp:
        src: "{{ output_dir }}/{{ app_codes }}_email.txt"
      register: email_content_raw

    - name: Decode email content
      ansible.builtin.set_fact:
        email_content: "{{ email_content_raw['content'] | b64decode }}"

    - name: Handle email notification
      block:
      # For Tower/AWX environments with SMTP configured
      - name: Send email through Tower/AWX
        community.general.mail:
          host: "{{ smtp_host }}"
          port: "{{ smtp_port }}"
          to: "{{ custodian_email }}"
          subject: "{{ app_codes }} - Server Compliance Overview"
          body: "{{ email_content }}"
        when: ansible_tower_version is defined
        register: mail_result
        ignore_errors: yes

      # If the above mail task fails or we're not in Tower
      - name: Alternative email notification method (debug)
        ansible.builtin.debug:
          msg: |
            Sending email to: {{ custodian_email }}
            Subject: {{ app_codes }} - Server Compliance Overview
            Body:
            {{ email_content }}
        when: mail_result is failed or ansible_tower_version is not defined

  post_tasks:
  # Cleanup temp files
  - name: Clean up temporary files
    ansible.builtin.file:
      path: "{{ item }}"
      state: absent
    with_fileglob:
    - "{{ temp_dir }}/*"
    ignore_errors: yes

  - name: Completion message
    ansible.builtin.debug:
      msg: "Server compliance email notification process completed successfully."
